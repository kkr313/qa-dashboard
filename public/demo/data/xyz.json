[
  {
    "_id": "6450bf6f8df97c6cc60924ed",
    "testName": "Report1",
    "suites": 4,
    "tests": 10,
    "passes": 5,
    "pending": 2,
    "failures": 2,
    "testsRegistered": 10,
    "passPercent": 80,
    "pendingPercent": 20,
    "other": 0,
    "hasOther": 0,
    "skipped": 1,
    "results": [
      {
        "file": "cypress/integration/examples/basics_tags.spec.js",
        "tests": [
          {
            "title": "should perform task A",
            "fullTitle": "direct_booking should perform task A",
            "timedOut": null,
            "duration": 35,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test1\");",
            "uuid": "0fbb7369-83fa-4430-96aa-fae2bcb589ce",
            "parentUUID": "a7327d9b-7aad-4eff-9999-9e2a13eefd7c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task B",
            "fullTitle": "direct_booking should perform task B",
            "timedOut": null,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test2\");",
            "uuid": "85e2ff69-c628-4531-bc3b-cbfb2bbc7f4e",
            "parentUUID": "a7327d9b-7aad-4eff-9999-9e2a13eefd7c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task B",
            "fullTitle": "direct_booking should perform task B",
            "timedOut": null,
            "duration": 0,
            "state": "pending",
            "speed": null,
            "pass": false,
            "fail": false,
            "pending": true,
            "context": null,
            "code": "",
            "uuid": "02e23762-af3f-44f3-ae78-4cfa66c155a6",
            "parentUUID": "a7327d9b-7aad-4eff-9999-9e2a13eefd7c",
            "isHook": false,
            "skipped": false
          }
        ]
      },
      {
        "file": "cypress/integration/examples/basics_tags1.spec.js",
        "tests": [
          {
            "title": "should perform task D",
            "fullTitle": "direct_booking should perform task D",
            "timedOut": null,
            "duration": 34,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test1\");",
            "uuid": "4d6ef098-b13e-4747-be9f-bc037bcc1ac6",
            "parentUUID": "1c079e7a-8db6-42b7-b250-7f2a4a066175",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task E",
            "fullTitle": "direct_booking should perform task E",
            "timedOut": null,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test2\");",
            "uuid": "82a45e78-85ae-44c1-9084-f5b3bb843b12",
            "parentUUID": "1c079e7a-8db6-42b7-b250-7f2a4a066175",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task F",
            "fullTitle": "direct_booking should perform task F",
            "timedOut": null,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test3\");",
            "uuid": "3b08b012-7b6f-46d2-b8a1-4d8e90694ca8",
            "parentUUID": "1c079e7a-8db6-42b7-b250-7f2a4a066175",
            "isHook": false,
            "skipped": false
          }
        ]
      },
      {
        "file": "cypress/integration/examples/basics_tags2.spec.js",
        "tests": [
          {
            "title": "should perform task G",
            "fullTitle": "direct_booking should perform task G",
            "timedOut": null,
            "duration": 36,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test1\");",
            "uuid": "029f8df9-3c1e-4e1c-b2dd-d85dda2ffc5b",
            "parentUUID": "9f2d4903-432d-4319-9d4f-bd2a49c2aabb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task H",
            "fullTitle": "direct_booking should perform task H",
            "timedOut": null,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test2\");",
            "uuid": "c79a9b96-1a10-418a-ac9d-f0d32e66a7ad",
            "parentUUID": "9f2d4903-432d-4319-9d4f-bd2a49c2aabb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task I",
            "fullTitle": "direct_booking should perform task I",
            "timedOut": null,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test3\");",
            "uuid": "e794c0d8-1c8a-4651-bcb4-ba752f73fb94",
            "parentUUID": "9f2d4903-432d-4319-9d4f-bd2a49c2aabb",
            "isHook": false,
            "skipped": false
          }
        ]
      },
      {
        "file": "cypress/integration/report/report.spec.js",
        "tests": [
          {
            "title": "should perform task A",
            "fullTitle": "Report should perform task A",
            "timedOut": null,
            "duration": 0,
            "state": "pending",
            "speed": null,
            "pass": false,
            "fail": false,
            "pending": true,
            "context": null,
            "code": "",
            "uuid": "d8b0bd2b-40a3-4dc1-a85b-ccc4be2fe737",
            "parentUUID": "f20e06f8-03ad-45b7-942a-6180aa856e96",
            "isHook": false,
            "skipped": false
          }
        ]
      }
    ],
    "__v": 0
  },
  {
    "_id": "6450c19c91bfabec2121de38",
    "testName": "Report2",
    "suites": 4,
    "tests": 10,
    "passes": 3,
    "pending": 3,
    "failures": 2,
    "testsRegistered": 10,
    "passPercent": 80,
    "pendingPercent": 20,
    "other": 0,
    "hasOther": 0,
    "skipped": 2,
    "results": [
      {
        "file": "cypress/integration/examples/basics_tags.spec.js",
        "tests": [
          {
            "title": "should perform task A",
            "fullTitle": "direct_booking should perform task A",
            "timedOut": null,
            "duration": 35,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test1\");",
            "uuid": "0fbb7369-83fa-4430-96aa-fae2bcb589ce",
            "parentUUID": "a7327d9b-7aad-4eff-9999-9e2a13eefd7c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task B",
            "fullTitle": "direct_booking should perform task B",
            "timedOut": null,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test2\");",
            "uuid": "85e2ff69-c628-4531-bc3b-cbfb2bbc7f4e",
            "parentUUID": "a7327d9b-7aad-4eff-9999-9e2a13eefd7c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task B",
            "fullTitle": "direct_booking should perform task B",
            "timedOut": null,
            "duration": 0,
            "state": "pending",
            "speed": null,
            "pass": false,
            "fail": false,
            "pending": true,
            "context": null,
            "code": "",
            "uuid": "02e23762-af3f-44f3-ae78-4cfa66c155a6",
            "parentUUID": "a7327d9b-7aad-4eff-9999-9e2a13eefd7c",
            "isHook": false,
            "skipped": false
          }
        ]
      },
      {
        "file": "cypress/integration/examples/basics_tags1.spec.js",
        "tests": [
          {
            "title": "should perform task D",
            "fullTitle": "direct_booking should perform task D",
            "timedOut": null,
            "duration": 34,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test1\");",
            "uuid": "4d6ef098-b13e-4747-be9f-bc037bcc1ac6",
            "parentUUID": "1c079e7a-8db6-42b7-b250-7f2a4a066175",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task E",
            "fullTitle": "direct_booking should perform task E",
            "timedOut": null,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test2\");",
            "uuid": "82a45e78-85ae-44c1-9084-f5b3bb843b12",
            "parentUUID": "1c079e7a-8db6-42b7-b250-7f2a4a066175",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task F",
            "fullTitle": "direct_booking should perform task F",
            "timedOut": null,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test3\");",
            "uuid": "3b08b012-7b6f-46d2-b8a1-4d8e90694ca8",
            "parentUUID": "1c079e7a-8db6-42b7-b250-7f2a4a066175",
            "isHook": false,
            "skipped": false
          }
        ]
      },
      {
        "file": "cypress/integration/examples/basics_tags2.spec.js",
        "tests": [
          {
            "title": "should perform task G",
            "fullTitle": "direct_booking should perform task G",
            "timedOut": null,
            "duration": 36,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test1\");",
            "uuid": "029f8df9-3c1e-4e1c-b2dd-d85dda2ffc5b",
            "parentUUID": "9f2d4903-432d-4319-9d4f-bd2a49c2aabb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task H",
            "fullTitle": "direct_booking should perform task H",
            "timedOut": null,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test2\");",
            "uuid": "c79a9b96-1a10-418a-ac9d-f0d32e66a7ad",
            "parentUUID": "9f2d4903-432d-4319-9d4f-bd2a49c2aabb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task I",
            "fullTitle": "direct_booking should perform task I",
            "timedOut": null,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test3\");",
            "uuid": "e794c0d8-1c8a-4651-bcb4-ba752f73fb94",
            "parentUUID": "9f2d4903-432d-4319-9d4f-bd2a49c2aabb",
            "isHook": false,
            "skipped": false
          }
        ]
      },
      {
        "file": "cypress/integration/report/report.spec.js",
        "tests": [
          {
            "title": "should perform task A",
            "fullTitle": "Report should perform task A",
            "timedOut": null,
            "duration": 0,
            "state": "pending",
            "speed": null,
            "pass": false,
            "fail": false,
            "pending": true,
            "context": null,
            "code": "",
            "uuid": "d8b0bd2b-40a3-4dc1-a85b-ccc4be2fe737",
            "parentUUID": "f20e06f8-03ad-45b7-942a-6180aa856e96",
            "isHook": false,
            "skipped": false
          }
        ]
      }
    ],
    "__v": 0
  },
  {
    "_id": "6450c1cd91bfabec2121de39",
    "testName": "Report3",
    "suites": 4,
    "tests": 15,
    "passes": 10,
    "pending": 2,
    "failures": 1,
    "testsRegistered": 10,
    "passPercent": 80,
    "pendingPercent": 20,
    "other": 0,
    "hasOther": 0,
    "skipped": 2,
    "results": [
      {
        "file": "cypress/integration/examples/basics_tags.spec.js",
        "tests": [
          {
            "title": "should perform task A",
            "fullTitle": "direct_booking should perform task A",
            "timedOut": null,
            "duration": 35,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test1\");",
            "uuid": "0fbb7369-83fa-4430-96aa-fae2bcb589ce",
            "parentUUID": "a7327d9b-7aad-4eff-9999-9e2a13eefd7c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task B",
            "fullTitle": "direct_booking should perform task B",
            "timedOut": null,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test2\");",
            "uuid": "85e2ff69-c628-4531-bc3b-cbfb2bbc7f4e",
            "parentUUID": "a7327d9b-7aad-4eff-9999-9e2a13eefd7c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task B",
            "fullTitle": "direct_booking should perform task B",
            "timedOut": null,
            "duration": 0,
            "state": "pending",
            "speed": null,
            "pass": false,
            "fail": false,
            "pending": true,
            "context": null,
            "code": "",
            "uuid": "02e23762-af3f-44f3-ae78-4cfa66c155a6",
            "parentUUID": "a7327d9b-7aad-4eff-9999-9e2a13eefd7c",
            "isHook": false,
            "skipped": false
          }
        ]
      },
      {
        "file": "cypress/integration/examples/basics_tags1.spec.js",
        "tests": [
          {
            "title": "should perform task D",
            "fullTitle": "direct_booking should perform task D",
            "timedOut": null,
            "duration": 34,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test1\");",
            "uuid": "4d6ef098-b13e-4747-be9f-bc037bcc1ac6",
            "parentUUID": "1c079e7a-8db6-42b7-b250-7f2a4a066175",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task E",
            "fullTitle": "direct_booking should perform task E",
            "timedOut": null,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test2\");",
            "uuid": "82a45e78-85ae-44c1-9084-f5b3bb843b12",
            "parentUUID": "1c079e7a-8db6-42b7-b250-7f2a4a066175",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task F",
            "fullTitle": "direct_booking should perform task F",
            "timedOut": null,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test3\");",
            "uuid": "3b08b012-7b6f-46d2-b8a1-4d8e90694ca8",
            "parentUUID": "1c079e7a-8db6-42b7-b250-7f2a4a066175",
            "isHook": false,
            "skipped": false
          }
        ]
      },
      {
        "file": "cypress/integration/examples/basics_tags2.spec.js",
        "tests": [
          {
            "title": "should perform task G",
            "fullTitle": "direct_booking should perform task G",
            "timedOut": null,
            "duration": 36,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test1\");",
            "uuid": "029f8df9-3c1e-4e1c-b2dd-d85dda2ffc5b",
            "parentUUID": "9f2d4903-432d-4319-9d4f-bd2a49c2aabb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task H",
            "fullTitle": "direct_booking should perform task H",
            "timedOut": null,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test2\");",
            "uuid": "c79a9b96-1a10-418a-ac9d-f0d32e66a7ad",
            "parentUUID": "9f2d4903-432d-4319-9d4f-bd2a49c2aabb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task I",
            "fullTitle": "direct_booking should perform task I",
            "timedOut": null,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test3\");",
            "uuid": "e794c0d8-1c8a-4651-bcb4-ba752f73fb94",
            "parentUUID": "9f2d4903-432d-4319-9d4f-bd2a49c2aabb",
            "isHook": false,
            "skipped": false
          }
        ]
      },
      {
        "file": "cypress/integration/report/report.spec.js",
        "tests": [
          {
            "title": "should perform task A",
            "fullTitle": "Report should perform task A",
            "timedOut": null,
            "duration": 0,
            "state": "pending",
            "speed": null,
            "pass": false,
            "fail": false,
            "pending": true,
            "context": null,
            "code": "",
            "uuid": "d8b0bd2b-40a3-4dc1-a85b-ccc4be2fe737",
            "parentUUID": "f20e06f8-03ad-45b7-942a-6180aa856e96",
            "isHook": false,
            "skipped": false
          }
        ]
      }
    ],
    "__v": 0
  },
  {
    "_id": "6450c1f191bfabec2121de3a",
    "testName": "Report4",
    "suites": 4,
    "tests": 19,
    "passes": 9,
    "pending": 2,
    "failures": 5,
    "testsRegistered": 10,
    "passPercent": 80,
    "pendingPercent": 20,
    "other": 0,
    "hasOther": 0,
    "skipped": 5,
    "results": [
      {
        "file": "cypress/integration/examples/basics_tags.spec.js",
        "tests": [
          {
            "title": "should perform task A",
            "fullTitle": "direct_booking should perform task A",
            "timedOut": null,
            "duration": 35,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test1\");",
            "uuid": "0fbb7369-83fa-4430-96aa-fae2bcb589ce",
            "parentUUID": "a7327d9b-7aad-4eff-9999-9e2a13eefd7c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task B",
            "fullTitle": "direct_booking should perform task B",
            "timedOut": null,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test2\");",
            "uuid": "85e2ff69-c628-4531-bc3b-cbfb2bbc7f4e",
            "parentUUID": "a7327d9b-7aad-4eff-9999-9e2a13eefd7c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task B",
            "fullTitle": "direct_booking should perform task B",
            "timedOut": null,
            "duration": 0,
            "state": "pending",
            "speed": null,
            "pass": false,
            "fail": false,
            "pending": true,
            "context": null,
            "code": "",
            "uuid": "02e23762-af3f-44f3-ae78-4cfa66c155a6",
            "parentUUID": "a7327d9b-7aad-4eff-9999-9e2a13eefd7c",
            "isHook": false,
            "skipped": false
          }
        ]
      },
      {
        "file": "cypress/integration/examples/basics_tags1.spec.js",
        "tests": [
          {
            "title": "should perform task D",
            "fullTitle": "direct_booking should perform task D",
            "timedOut": null,
            "duration": 34,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test1\");",
            "uuid": "4d6ef098-b13e-4747-be9f-bc037bcc1ac6",
            "parentUUID": "1c079e7a-8db6-42b7-b250-7f2a4a066175",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task E",
            "fullTitle": "direct_booking should perform task E",
            "timedOut": null,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test2\");",
            "uuid": "82a45e78-85ae-44c1-9084-f5b3bb843b12",
            "parentUUID": "1c079e7a-8db6-42b7-b250-7f2a4a066175",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task F",
            "fullTitle": "direct_booking should perform task F",
            "timedOut": null,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test3\");",
            "uuid": "3b08b012-7b6f-46d2-b8a1-4d8e90694ca8",
            "parentUUID": "1c079e7a-8db6-42b7-b250-7f2a4a066175",
            "isHook": false,
            "skipped": false
          }
        ]
      },
      {
        "file": "cypress/integration/examples/basics_tags2.spec.js",
        "tests": [
          {
            "title": "should perform task G",
            "fullTitle": "direct_booking should perform task G",
            "timedOut": null,
            "duration": 36,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test1\");",
            "uuid": "029f8df9-3c1e-4e1c-b2dd-d85dda2ffc5b",
            "parentUUID": "9f2d4903-432d-4319-9d4f-bd2a49c2aabb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task H",
            "fullTitle": "direct_booking should perform task H",
            "timedOut": null,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test2\");",
            "uuid": "c79a9b96-1a10-418a-ac9d-f0d32e66a7ad",
            "parentUUID": "9f2d4903-432d-4319-9d4f-bd2a49c2aabb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should perform task I",
            "fullTitle": "direct_booking should perform task I",
            "timedOut": null,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "// Test code\ncy.log(\"Test3\");",
            "uuid": "e794c0d8-1c8a-4651-bcb4-ba752f73fb94",
            "parentUUID": "9f2d4903-432d-4319-9d4f-bd2a49c2aabb",
            "isHook": false,
            "skipped": false
          }
        ]
      },
      {
        "file": "cypress/integration/report/report.spec.js",
        "tests": [
          {
            "title": "should perform task A",
            "fullTitle": "Report should perform task A",
            "timedOut": null,
            "duration": 0,
            "state": "pending",
            "speed": null,
            "pass": false,
            "fail": false,
            "pending": true,
            "context": null,
            "code": "",
            "uuid": "d8b0bd2b-40a3-4dc1-a85b-ccc4be2fe737",
            "parentUUID": "f20e06f8-03ad-45b7-942a-6180aa856e96",
            "isHook": false,
            "skipped": false
          }
        ]
      }
    ],
    "__v": 0
  },
  {
    "_id": "645200b67055db8a21d2f675",
    "testName": "Report5",
    "suites": 2,
    "tests": 6,
    "passes": 3,
    "pending": 1,
    "failures": 1,
    "testsRegistered": 6,
    "passPercent": 0,
    "pendingPercent": 100,
    "other": 0,
    "hasOther": 0,
    "skipped": 1,
    "results": [
      {
        "file": "cypress/integration/web/regression/regression.spec.js",
        "tests": [
          {
            "title": "TC1033 - Verify Admin able to create Internal Forwarder User",
            "fullTitle": "Regression TC1033 - Verify Admin able to create Internal Forwarder User",
            "timedOut": null,
            "duration": 0,
            "state": "pending",
            "speed": null,
            "pass": false,
            "fail": false,
            "pending": true,
            "context": null,
            "code": "",
            "uuid": "212105d5-2b44-4f69-85d1-71df13e311bd",
            "parentUUID": "42811278-4dec-4575-8a30-75bbe780f3f9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "TC4336 - Verify forwarder can create shipper admin and shipper users",
            "fullTitle": "Regression TC4336 - Verify forwarder can create shipper admin and shipper users",
            "timedOut": null,
            "duration": 0,
            "state": "pending",
            "speed": null,
            "pass": false,
            "fail": false,
            "pending": true,
            "context": null,
            "code": "",
            "uuid": "a20b0c45-8431-4865-8a6a-5dde8746294e",
            "parentUUID": "42811278-4dec-4575-8a30-75bbe780f3f9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "TC1550 - Check user can update the company profile from configurations",
            "fullTitle": "Regression TC1550 - Check user can update the company profile from configurations",
            "timedOut": null,
            "duration": 0,
            "state": "pending",
            "speed": null,
            "pass": false,
            "fail": false,
            "pending": true,
            "context": null,
            "code": "",
            "uuid": "825b2817-d47c-41ec-aa1e-bd0964d6b6ff",
            "parentUUID": "42811278-4dec-4575-8a30-75bbe780f3f9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Validate empty container pickup location - Full Flow",
            "fullTitle": "Regression Validate empty container pickup location - Full Flow",
            "timedOut": null,
            "duration": 0,
            "state": "pending",
            "speed": null,
            "pass": false,
            "fail": false,
            "pending": true,
            "context": null,
            "code": "",
            "uuid": "52ad78cd-499a-4dce-93e0-6c638076e991",
            "parentUUID": "42811278-4dec-4575-8a30-75bbe780f3f9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "MyRates",
            "fullTitle": "Regression MyRates",
            "timedOut": null,
            "duration": 0,
            "state": "pending",
            "speed": null,
            "pass": false,
            "fail": false,
            "pending": true,
            "context": null,
            "code": "",
            "uuid": "12c6c0c4-e18e-401c-b915-fda9c8d213d8",
            "parentUUID": "42811278-4dec-4575-8a30-75bbe780f3f9",
            "isHook": false,
            "skipped": false
          }
        ]
      },
      {
        "file": "cypress/integration/report/report.spec.js",
        "tests": [
          {
            "title": "should perform task A",
            "fullTitle": "Report should perform task A",
            "timedOut": null,
            "duration": 0,
            "state": "pending",
            "speed": null,
            "pass": false,
            "fail": false,
            "pending": true,
            "context": null,
            "code": "",
            "uuid": "ab6087cc-3b25-48de-99ac-fc7f231cc47e",
            "parentUUID": "04e57c7e-c04d-477e-9289-a9e7a54d59a2",
            "isHook": false,
            "skipped": false
          }
        ]
      }
    ],
    "__v": 0
  },
  {
    "_id": "645204817055db8a21d2f6d4",
    "testName": "regressionReport123",
    "suites": 2,
    "tests": 6,
    "passes": 5,
    "pending": 1,
    "failures": 0,
    "testsRegistered": 6,
    "passPercent": 83.33333333333333,
    "pendingPercent": 16.666666666666668,
    "other": 0,
    "hasOther": 0,
    "skipped": 0,
    "results": [
      {
        "file": "cypress/integration/web/regression/regression.spec.js",
        "tests": [
          {
            "title": "TC1033 - Verify Admin able to create Internal Forwarder User",
            "fullTitle": "Regression TC1033 - Verify Admin able to create Internal Forwarder User",
            "timedOut": null,
            "duration": 74941,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "cy.fixture('elementRepositories/web/users.json').then(usersPage => {\n  var internalUser_firstName = _commonMethod.default.randomStringGenerator(4).toUpperCase();\n  var internalUser_lastName = _commonMethod.default.randomStringGenerator(4).toUpperCase();\n  var internalUser_phoneNumber = _commonMethod.default.randomPhoneNumberGenerator(10);\n  var internalUser_email = _commonMethod.default.randomEmailGenerator(3);\n  var internalUser_password = \"Password@123\";\n  var email = internalUser_email + \"$\";\n  cy.writeFile(\"cypress/fixtures/UsersEmailList.txt\", email, {\n    flag: 'a+'\n  });\n  _commonMethod.default.openApp(url + \"users\");\n  _loginPage_commonMethod.default.enterEmailAndLogin(username, password);\n  cy.wait(2000);\n  _usersPage_commonMethod.default.clickOnCreateNewUser();\n  _usersPage_commonMethod.default.verifyCreateUserFeildsEmpty();\n  _usersPage_commonMethod.default.enterFirstName(internalUser_firstName);\n  _usersPage_commonMethod.default.enterLastName(internalUser_lastName);\n  _usersPage_commonMethod.default.updateCurrency(\"INR\");\n  _usersPage_commonMethod.default.enterPhoneNumber(internalUser_phoneNumber);\n  _usersPage_commonMethod.default.clickOnUserRole();\n  _usersPage_commonMethod.default.enterUserRole(\"USER\");\n  cy.wait(5000);\n  cy.xpath(usersPage.userGlobal).click();\n  _usersPage_commonMethod.default.enterEmail(internalUser_email);\n  _usersPage_commonMethod.default.enterPasswordAndConfirmPAssword(internalUser_password);\n  _usersPage_commonMethod.default.clickOnSubmitButton();\n  cy.wait(3000);\n  _usersPage_commonMethod.default.searchUserUsingEmail(internalUser_email);\n  cy.xpath(\"//span[text()='\" + internalUser_email + \"']\").should('have.text', internalUser_email);\n  cy.log(\"New Forwarder User has been created\");\n  _navigationBar_commonMethods.default.logOut();\n});",
            "uuid": "4d8253d9-2332-4bb2-8f41-01c79ddba29a",
            "parentUUID": "37d10d99-13a5-4ca4-bb0a-2a5f7760ebd3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "TC4336 - Verify forwarder can create shipper admin and shipper users",
            "fullTitle": "Regression TC4336 - Verify forwarder can create shipper admin and shipper users",
            "timedOut": null,
            "duration": 147602,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "cy.fixture('elementRepositories/web/users.json').then(usersPage => {\n  var shipperCompanyName = _commonMethod.default.randomStringGenerator(4).toUpperCase() + \" Pvt. Ltd \";\n  var shipperCompanyEmail = _commonMethod.default.randomEmailGenerator(4);\n  var shipperPhoneNumber = _commonMethod.default.randomPhoneNumberGenerator();\n  var shipperAdmin_firstName = _commonMethod.default.randomStringGenerator(5).toUpperCase();\n  var shipperAdmin_lastName = _commonMethod.default.randomStringGenerator(5).toUpperCase();\n  var shipperAdmin_email = _commonMethod.default.randomEmailGenerator(5);\n  var shipperAdmin_phoneNumber = _commonMethod.default.randomPhoneNumberGenerator(10);\n  var shipperAdmin_password = \"Password@123\";\n  var email = shipperAdmin_email + \"$\";\n  cy.writeFile(\"cypress/fixtures/UsersEmailList.txt\", email, {\n    flag: 'a+'\n  });\n  var shipperUser_firstName = _commonMethod.default.randomStringGenerator(5).toUpperCase();\n  var shipperUser_lastName = _commonMethod.default.randomStringGenerator(5).toUpperCase();\n  var shipperUser_email = _commonMethod.default.randomEmailGenerator(5);\n  var shipperUser_phoneNumber = _commonMethod.default.randomPhoneNumberGenerator(10);\n  var shipperUser_password = \"Password@123\";\n  var email = shipperUser_email + \"$\";\n  cy.writeFile(\"cypress/fixtures/UsersEmailList.txt\", email, {\n    flag: 'a+'\n  });\n  _commonMethod.default.openApp(url + \"shippers\");\n  _loginPage_commonMethod.default.enterEmailAndLogin(username, password);\n  cy.wait(2000);\n  _shippersPage_commonMethod.default.clickOnAddShipper(shipperCompanyName, shipperCompanyEmail, shipperPhoneNumber);\n  _commonMethod.default.openApp(url + \"users\");\n  _usersPage_commonMethod.default.clickOnCreateNewUser();\n  _usersPage_commonMethod.default.changeUserTypeToShipper();\n  _usersPage_commonMethod.default.enterCompanyNameInCreateNewUser(shipperCompanyName);\n  _usersPage_commonMethod.default.enterFirstName(shipperAdmin_firstName);\n  _usersPage_commonMethod.default.enterLastName(shipperAdmin_lastName);\n  _usersPage_commonMethod.default.updateCurrency(\"INR\");\n  _usersPage_commonMethod.default.enterPhoneNumber(shipperAdmin_phoneNumber);\n  _usersPage_commonMethod.default.selectRoleAsShipperAdmin();\n  _usersPage_commonMethod.default.enterEmail(shipperAdmin_email);\n  _usersPage_commonMethod.default.enterPasswordAndConfirmPAssword(shipperAdmin_password);\n  _usersPage_commonMethod.default.clickOnSubmitButton();\n  cy.wait(2000);\n  _usersPage_commonMethod.default.clickOnShipperUsers();\n  _usersPage_commonMethod.default.searchUserUsingEmail(shipperAdmin_email);\n  cy.log(\"A New Shipper Admin has been created using Forwarder\");\n  cy.xpath(usersPage.shipperAdminRoleinEmailSearch).should('have.text', \"SHIPPER ADMIN\");\n  _commonMethod.default.openApp(url + \"users\");\n  _usersPage_commonMethod.default.clickOnCreateNewUser();\n  _usersPage_commonMethod.default.changeUserTypeToShipper();\n  _usersPage_commonMethod.default.enterCompanyNameInCreateNewUser(shipperCompanyName);\n  _usersPage_commonMethod.default.enterFirstName(shipperUser_firstName);\n  _usersPage_commonMethod.default.enterLastName(shipperUser_lastName);\n  _usersPage_commonMethod.default.updateCurrency(\"INR\");\n  _usersPage_commonMethod.default.enterPhoneNumber(shipperUser_phoneNumber);\n  _usersPage_commonMethod.default.clickOnUserRole();\n  _usersPage_commonMethod.default.enterUserRole(\"SHIPPER USER\");\n  cy.wait(3000);\n  cy.xpath(usersPage.shipperUser).click(); // cy.xpath(\"//md-option[@value='b1ad84e0-2225-11e9-803a-0186ee9b6985']//div[1]\").click()\n  _usersPage_commonMethod.default.enterEmail(shipperUser_email);\n  _usersPage_commonMethod.default.enterPasswordAndConfirmPAssword(shipperUser_password);\n  _usersPage_commonMethod.default.clickOnSubmitButton();\n  cy.wait(2000);\n  _usersPage_commonMethod.default.clickOnShipperUsers();\n  _usersPage_commonMethod.default.searchUserUsingEmail(shipperUser_email);\n  cy.log(\"A New Shipper User has been created using Forwarder\");\n  cy.xpath(usersPage.shipperUserRoleinEmailSearch).should('have.text', \"SHIPPER USER\");\n  _navigationBar_commonMethods.default.logOut();\n});",
            "uuid": "4c7dc41a-260f-48e2-8b6b-dffd4e7ebcff",
            "parentUUID": "37d10d99-13a5-4ca4-bb0a-2a5f7760ebd3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "TC1550 - Check user can update the company profile from configurations",
            "fullTitle": "Regression TC1550 - Check user can update the company profile from configurations",
            "timedOut": null,
            "duration": 24805,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "cy.allure().description(\"This Method Check user can update the company profile from configurations\");\ncy.allure().owner(\"Kalpana S\");\ncy.intercept({\n  method: 'POST',\n  url: `/api/forwarder-update/*`\n}).as(\"companyInfo\");\ncy.allure().step('Open Configurations -> company profile');\n_commonMethod.default.openApp(url + \"company-information\");\n_loginPage_commonMethod.default.enterEmailAndLogin(username, password);\nvar updatedCompanyName = \"QA Automation - \" + _commonMethod.default.randomStringGenerator(1).toUpperCase() + _commonMethod.default.randomStringGenerator(2).toLowerCase();\nvar updatedPhoneNumber = _commonMethod.default.randomPhoneNumberGenerator();\nvar updatedEmailId = _commonMethod.default.randomEmailGenerator();\nvar updatedCompanyWebsite = \"www.freightify\" + _commonMethod.default.randomStringGenerator(3).toLowerCase() + \".com\";\ncy.allure().step(\"Edit and Update the following Company name,Company phone number,zip code,Address,company website\");\n_myCompanyPage_commonMethod.default.editCompanyProfileName(updatedCompanyName);\n_myCompanyPage_commonMethod.default.editCompanyEmailId(updatedEmailId);\n_myCompanyPage_commonMethod.default.editCompanyPhoneNumber(updatedPhoneNumber);\n_myCompanyPage_commonMethod.default.editCompanyWebsite(updatedCompanyWebsite);\n_myCompanyPage_commonMethod.default.clickOnApplyChanges();\ncy.wait(3000);\ncy.wait(\"@companyInfo\").its(\"response.body\").then(companyInfo => {\n  expect(companyInfo.company.company_name).eq(updatedCompanyName);\n  expect(companyInfo.company.company_email).eq(updatedEmailId);\n  expect(companyInfo.company.domain_data.company_website_url).eq(updatedCompanyWebsite);\n  expect(companyInfo.company.company_phone_number).eq(updatedPhoneNumber.toString());\n});\ncy.allure().step(\"Verify the Company Profile after the edit.\");\ncy.log(\"Verify the Company profile Name is displayed correctly\");\ncy.xpath(`//input[@placeholder='Enter Company name']`).should('have.value', updatedCompanyName);\ncy.xpath(`//input[@placeholder='Enter Company Website']`).should('have.value', updatedCompanyWebsite);\ncy.xpath(`//input[@placeholder='Enter Email ID']`).should('have.value', updatedEmailId);\ncy.xpath(`//input[@placeholder='Phone Number']`).should('have.value', updatedPhoneNumber);\ncy.intercept({\n  method: 'POST',\n  url: `/api/forwarder-update/*`\n}).as(\"companyInfo1\");\ncy.log('Edit back the company name as email as previous one ' + companyName + ' ' + companyEmail);\n_myCompanyPage_commonMethod.default.editCompanyProfileName(companyName);\n_myCompanyPage_commonMethod.default.editCompanyEmailId(companyEmail);\n_myCompanyPage_commonMethod.default.clickOnApplyChanges();\ncy.wait(3000);\ncy.xpath(`//input[@placeholder='Enter Company name']`).should('have.value', companyName);\ncy.xpath(`//input[@placeholder='Enter Email ID']`).should('have.value', companyEmail);\ncy.wait(\"@companyInfo1\").its(\"response.body\").then(companyInfo => {\n  expect(companyInfo.company.company_name).eq(companyName);\n  expect(companyInfo.company.company_email).eq(companyEmail);\n  expect(companyInfo.company.domain_data.company_website_url).eq(updatedCompanyWebsite);\n  expect(companyInfo.company.company_phone_number).eq(updatedPhoneNumber.toString());\n});",
            "uuid": "44300ab0-35c7-4013-b88f-c1e70ee55c5c",
            "parentUUID": "37d10d99-13a5-4ca4-bb0a-2a5f7760ebd3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Validate empty container pickup location - Full Flow",
            "fullTitle": "Regression Validate empty container pickup location - Full Flow",
            "timedOut": null,
            "duration": 117588,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "cy.allure().description(\"Validate empty container pickup location - combined test scenarios\");\nvar testCaseId = \"Depot-1\";\ncy.task('readXlsx', {\n  file: 'cypress/fixtures/sheet/depot.xlsx',\n  sheet: \"Depot-1\"\n}).then(rows => {\n  for (let i = 0; i < rows.length; i++) {\n    var sDate = _commonMethod.default.getFutureDate(0);\n    var eDate = _commonMethod.default.getFutureDate(rows[i].noOfDaysFromCurrentDate);\n    var startDate = sDate.year + \"-\" + sDate.month + \"-\" + sDate.date;\n    var expiryDate = eDate.year + \"-\" + eDate.month + \"-\" + eDate.date;\n    var l3_legDetails = _datatInsertionCommonMethod.default.get_FCL_L3_Data(pcms_vendor_id, rows[i].L3_sub_vendor_id, rows[i].L3_origin, rows[i].L3_destination, rows[i].L3_via_pol, rows[i].L3_via_pod, rows[i].L3_serviceType, rows[i].L3_cargoType, rows[i].L3_commodity, startDate, expiryDate, rows[i], rows[i].isAgentRequired, rows[i].agentId, rows[i].L3_Type);\n    _helper.default.dataCreation(l3_legDetails).then(data => {\n      var Batchcode = data.body[0].batchcode + \"$\";\n      var bCode = \"L3=\" + data.body[0].batchcode + \"$\";\n      cy.log(Batchcode);\n      cy.writeFile(\"cypress/fixtures/updatedBatchcode.txt\", Batchcode, {\n        flag: 'a+'\n      });\n      cy.writeFile(`cypress/fixtures/test/${testCaseId}_currentBatchCodeList.txt`, bCode, {\n        flag: 'a+'\n      });\n    });\n    var l2_legDetails = _datatInsertionCommonMethod.default.get_FCL_L2_Data(pcms_vendor_id, rows[i].L2_sub_vendor_id, rows[i].L2_origin, rows[i].L2_destination, rows[i].L2_via_pol, rows[i].L2_via_pod, rows[i].L2_serviceType, rows[i].L2_cargoType, rows[i].L2_commodity, startDate, expiryDate, rows[i], rows[i].L2_loadType);\n    _helper.default.dataCreation(l2_legDetails).then(data => {\n      var Batchcode = data.body[0].batchcode + \"$\";\n      var bCode = \"L2=\" + data.body[0].batchcode + \"$\";\n      cy.log(Batchcode);\n      cy.writeFile(\"cypress/fixtures/updatedBatchcode.txt\", Batchcode, {\n        flag: 'a+'\n      });\n      cy.writeFile(`cypress/fixtures/test/${testCaseId}_currentBatchCodeList.txt`, bCode, {\n        flag: 'a+'\n      });\n    });\n    var l4_legDetails = _datatInsertionCommonMethod.default.get_FCL_L4_Data(pcms_vendor_id, rows[i].L4_sub_vendor_id, rows[i].L4_origin, rows[i].L4_destination, rows[i].L4_via_pol, rows[i].L4_via_pod, rows[i].L4_serviceType, rows[i].L4_cargoType, rows[i].L4_commodity, startDate, expiryDate, rows[i], rows[i].L4_loadType);\n    _helper.default.dataCreation(l4_legDetails).then(data => {\n      var Batchcode = data.body[0].batchcode + \"$\";\n      var bCode = \"L4=\" + data.body[0].batchcode + \"$\";\n      cy.log(Batchcode);\n      cy.writeFile(\"cypress/fixtures/updatedBatchcode.txt\", Batchcode, {\n        flag: 'a+'\n      });\n      cy.writeFile(`cypress/fixtures/test/${testCaseId}_currentBatchCodeList.txt`, bCode, {\n        flag: 'a+'\n      });\n    });\n    if (rows[i].isOriginDoorRequired == true) {\n      var l1_legDetails = _datatInsertionCommonMethod.default.get_FCL_L1_Data(pcms_vendor_id, rows[i].L3_sub_vendor_id, rows[i].L3_origin, rows[i].originPort, rows[i].originCountryCode, rows[i].L3_serviceType, rows[i].L3_cargoType, rows[i].L3_commodity, startDate, expiryDate, rows[i], false, \"\", rows[i].L3_Type, null, rows[i].empty_container_pickup, \"\", rows[i].origin_pincode); // cy.writeFile(\"cypress/fixtures/l1.json\", l1_legDetails)\n\n      cy.log(rows[i].origin_pincode);\n      cy.log(l1_legDetails);\n      _helper.default.dataCreation(l1_legDetails).then(data => {\n        var Batchcode = data.body[0].batchcode + \"$\";\n        var bCode = \"L1=\" + data.body[0].batchcode + \"$\";\n        cy.log(Batchcode);\n        cy.writeFile(\"cypress/fixtures/updatedBatchcode.txt\", Batchcode, {\n          flag: 'a+'\n        });\n        cy.writeFile(`cypress/fixtures/test/${testCaseId}_currentBatchCodeList.txt`, bCode, {\n          flag: 'a+'\n        });\n      });\n    }\n    if (rows[i].isDestinationDoorRequired == true) {\n      var l5_legDetails = _datatInsertionCommonMethod.default.get_FCL_L5_Data(pcms_vendor_id, rows[i].L3_sub_vendor_id, rows[i].L3_destination, rows[i].destinationPort, rows[i].destinationCountryCode, rows[i].L3_serviceType, rows[i].L3_cargoType, rows[i].L3_commodity, startDate, expiryDate, rows[i], false, \"\", rows[i].L3_Type, null, rows[i].empty_container_drop, \"\", rows[i].destination_pincode);\n      cy.log(rows[i].destination_pincode);\n      cy.log(l5_legDetails);\n      _helper.default.dataCreation(l5_legDetails).then(data => {\n        var Batchcode = data.body[0].batchcode + \"$\";\n        var bCode = \"L5=\" + data.body[0].batchcode + \"$\";\n        cy.log(Batchcode);\n        cy.writeFile(\"cypress/fixtures/updatedBatchcode.txt\", Batchcode, {\n          flag: 'a+'\n        });\n        cy.writeFile(`cypress/fixtures/test/${testCaseId}_currentBatchCodeList.txt`, bCode, {\n          flag: 'a+'\n        });\n      });\n    }\n    cy.intercept('POST', '/oauth/token').as('login');\n    cy.intercept({\n      method: 'GET',\n      url: `/api/get-rates?*`,\n      query: {\n        type: \"msr_rates\",\n        nearby_only: \"false\",\n        mode: \"SEA-FCL\",\n        leg_type: \"l3_fcl,l1_fcl,l2_fcl,l4_fcl,l5_fcl\"\n      }\n    }).as('msrRates');\n    cy.allure().step('Open the app and login');\n    _commonMethod.default.openApp(pcms_url);\n    _loginPage_commonMethod.default.enterEmailAndLogin(username, password);\n    cy.wait(3000);\n    cy.allure().step(\"Select FCL mode & Enter the following fields 1. Origin 2. Destination 3. Set cargoready date 4. Select the load details - 20GP,40GP 5. Select the local charge -> All Locals & Custom charges 6. Select the sales & shipper company\");\n    _instantRatePage_commonMethod.default.enterOrigin_destination_port(\"CHG12\", \"EGA12\");\n    _instantRatePage_commonMethod.default.selectCustomChargesForSearch(false, false);\n    _commonMethod.default.clickOnDoneButton();\n    _instantRatePage_commonMethod.default.selectCutOFDate(0);\n    _instantRatePage_commonMethod.default.clickSearchInstantRates();\n    cy.wait(4000);\n    cy.wait('@login').its('response.body').then(loginJson => {\n      var BearerToken = `${loginJson.token_type} ${loginJson.access_token}`;\n      var userId = loginJson.use_id;\n      _helper2.default.getProfileDetails(uri, BearerToken, pcms_refererDomain, userId).then(function (profileDetails) {\n        cy.writeFile(`cypress/fixtures/${profileJsonPath}`, JSON.stringify(profileDetails));\n      });\n      _helper2.default.getCurrencySettings(uri, BearerToken, pcms_refererDomain).then(function (currencySettingDetails) {\n        cy.writeFile(`cypress/fixtures/${currenySettingsJsonPath}`, JSON.stringify(currencySettingDetails));\n      });\n    });\n    cy.wait(10000);\n    cy.wait('@msrRates').its('response.body').then(msrRatesResponse => {\n      if (msrRatesResponse.data.rates[3].empty_container_pickup.port_code == rows[i].empty_container_pickup) {\n        expect(msrRatesResponse.data.rates[3].empty_container_pickup.port_code).eq(rows[i].empty_container_pickup);\n        expect(msrRatesResponse.data.rates[3].charges[0].charge_cost, \"Verify the Pickup Charge : \").eq(rows[i].pickup_charge);\n        expect(msrRatesResponse.data.rates[3].charges[0].charge_code).eq(\"pickup_charge\");\n        expect(msrRatesResponse.data.rates[3].charges[1].charge_cost, \"Verify the Carrier Haulage Discount : \").eq(rows[i].carrier_haulage_discount);\n        expect(msrRatesResponse.data.rates[3].charges[1].charge_code).eq(\"carrier_haulage_discount\");\n      } else {\n        expect(msrRatesResponse.data.rates[3].empty_container_drop.port_code).eq(rows[i].empty_container_drop);\n        expect(msrRatesResponse.data.rates[3].charges[0].charge_cost, \"Verify the Delivery fee : \").eq(rows[i].delivery_fee);\n        expect(msrRatesResponse.data.rates[3].charges[0].charge_code).eq(\"delivery_fee\");\n      }\n      if (msrRatesResponse.data.rates[4].empty_container_drop.port_code == rows[i].empty_container_drop) {\n        expect(msrRatesResponse.data.rates[4].empty_container_drop.port_code).eq(rows[i].empty_container_drop);\n        expect(msrRatesResponse.data.rates[4].charges[0].charge_cost, \"Verify the Delivery fee : \").eq(rows[i].delivery_fee);\n        expect(msrRatesResponse.data.rates[4].charges[0].charge_code).eq(\"delivery_fee\");\n      } else {\n        expect(msrRatesResponse.data.rates[4].empty_container_pickup.port_code).eq(rows[i].empty_container_pickup);\n        expect(msrRatesResponse.data.rates[4].charges[0].charge_cost, \"Verify the Pickup Charge : \").eq(rows[i].pickup_charge);\n        expect(msrRatesResponse.data.rates[4].charges[0].charge_code).eq(\"pickup_charge\");\n        expect(msrRatesResponse.data.rates[4].charges[1].charge_cost).eq(rows[i].carrier_haulage_discount);\n        expect(msrRatesResponse.data.rates[4].charges[1].charge_code, \"Verify the Carrier Haulage Discount : \").eq(\"carrier_haulage_discount\");\n      }\n      cy.xpath(\"//span[text()[normalize-space()='View Details']]\").click({\n        force: true\n      });\n      cy.wait(5000);\n    });\n    _instantRatePage_commonMethod.default.clickOnCreateQuote();\n    _instantRatePage_commonMethod.default.clickOnProvideQuoteDetails();\n    _generateQuotationPage_commonMethod.default.generateQuatotationWithEmail(pcms_shipper_username);\n    cy.wait(10000);\n    _generateQuotationPage_commonMethod.default.clickOnViewQuote();\n    cy.wait(5000);\n    cy.xpath(\"(//div[@class='li-div']//div)[1]\").should('contain', rows[i].empty_container_pickup);\n    cy.xpath(\"//button[text()[normalize-space()='Book Now']]\").click({\n      force: true\n    });\n    cy.wait(5000);\n    cy.xpath(\"//button[text()[normalize-space()='Request Booking']]\").click({\n      force: true\n    });\n    cy.wait(5000);\n    cy.xpath(\"//u[text()='View Shipment here']\").click({\n      force: true\n    });\n    cy.wait(5000);\n    cy.log(\"Cannot read the depot in the shipment details page\");\n    cy.xpath(\"(//span[text()='Shipments'])[2]\").click({\n      force: true\n    });\n    cy.wait(3000);\n    cy.xpath(\"(//div[@class='li-div']//div)[1]\").should('contain', rows[i].empty_container_pickup);\n    cy.xpath(\"(//span[text()='Quotes'])[2]\").click({\n      force: true\n    });\n    cy.wait(3000);\n    cy.log('Cannot read the depot in the quote list page');\n  }\n});",
            "uuid": "b9355961-cda1-404e-8a26-46569606bef3",
            "parentUUID": "37d10d99-13a5-4ca4-bb0a-2a5f7760ebd3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "MyRates",
            "fullTitle": "Regression MyRates",
            "timedOut": null,
            "duration": 136827,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "cy.fixture('elementRepositories/web/upload.json').then(upload => {\n  cy.fixture('elementRepositories/web/quotesDetail.json').then(quotesDetailspage => {\n    cy.fixture('elementRepositories/web/instantRates_page.json').then(instantratesPage => {\n      cy.allure().description('To verify that all publised rates are visible on search, inquiry and quotes page');\n      cy.task('readXlsx', {\n        file: 'cypress/fixtures/sheet/myrates.xlsx',\n        sheet: \"TC3095\"\n      }).then(rows => {\n        for (let i = 0; i < rows.length; i++) {\n          cy.intercept({\n            method: 'GET',\n            url: `/api/get-rates?*`,\n            query: {\n              type: \"msr_rates\",\n              nearby_only: \"false\",\n              mode: \"SEA-FCL\",\n              leg_type: \"l3_fcl,l2_fcl,l4_fcl\"\n            }\n          }).as('msrRates');\n          cy.intercept({\n            method: 'POST',\n            url: `/api/v2/myrates/list`\n          }).as('list');\n          var sDate = _commonMethod.default.getFutureDate(0);\n          cy.allure().owner(\"Kalpana S\");\n          cy.allure().step('Open the app and login');\n          _commonMethod.default.openApp(url + \"add-rates\");\n          cy.allure().step(\"Update with valid info - Username & password & Submit\");\n          _loginPage_commonMethod.default.enterEmailAndLogin(username, password);\n          cy.wait(2000);\n          cy.xpath(upload.addRatesIframe).then($iframe => {\n            const $body = $iframe.contents().find('body');\n            cy.wait(5000);\n            _addRatesPage_commonMethod.default.selectOriginPort($body, rows[0].L3_origin);\n            _addRatesPage_commonMethod.default.selectDestinationPort($body, rows[0].L3_destination);\n            _addRatesPage_commonMethod.default.selectLoadType($body, \"20GP\");\n            _addRatesPage_commonMethod.default.selectLiner($body, \"All Liners\");\n            _addRatesPage_commonMethod.default.clickOnOtherDetails($body);\n            _addRatesPage_commonMethod.default.addCharge($body, rows, rows[0].isOriginRequired, rows[0].isDestinationRequired);\n            _addRatesPage_commonMethod.default.selectDate($body, sDate.date);\n            _addRatesPage_commonMethod.default.clickOnPublishandProceed($body);\n          });\n          cy.wait(5000);\n          cy.wait('@list').its('response.body.data').then(listResponse => {\n            var Bcode = listResponse.data[0].batchcode;\n            cy.xpath(instantratesPage.selectInstantRatesfromMenuBar).click({\n              force: true\n            });\n            cy.wait(5000);\n            _instantRatePage_commonMethod.default.enterOrigin_destination_port(rows[0].L3_origin, rows[0].L3_destination);\n            _instantRatePage_commonMethod.default.selectCutOFDate(0);\n            _instantRatePage_commonMethod.default.selectLoadTypeFCL(rows[0].L3_Type, rows[0].quantity, rows[0].weight);\n            _instantRatePage_commonMethod.default.selectCustomChargesForSearch(rows[0].isOriginCustomChargeRequired, rows[0].isDestinationCustomChargeRequired);\n            _commonMethod.default.clickOnDoneButton();\n            _instantRatePage_commonMethod.default.selectCustomerDetailsForwarder(shipperUser_username);\n            _instantRatePage_commonMethod.default.clickSearchInstantRates();\n            cy.wait(5000);\n            cy.wait('@msrRates').its('response.body').then(msrRatesResponse => {\n              var bcode = msrRatesResponse.data.rates[0].batchcode[0];\n              expect(bcode).eq(Bcode);\n              cy.log(\"Check the Origin Port\");\n              cy.xpath(instantratesPage.validateOriginPort).should('have.text', '\\n' + rows[0].L3_origin);\n              cy.log(\"Check the Destination\");\n              cy.xpath(instantratesPage.validateDestinationPort).should('have.text', '\\n' + rows[0].L3_destination);\n              cy.wait(3000);\n              cy.xpath(instantratesPage.clickOnViewDetailsButton).click({\n                force: true\n              });\n              cy.wait(2000);\n              _instantRatePage_commonMethod.default.clickOnCreateQuote();\n              cy.wait(2000);\n              _instantRatePage_commonMethod.default.clickOnProvideQuoteDetails();\n              _generateQuotationPage_commonMethod.default.generateQuatotation();\n              cy.wait(5000);\n              cy.log(\"get the inquiry ID\");\n              cy.get('.inquiry-id').invoke('text').as('inquiryId_FCL');\n              cy.log(\"Click on View Quotes\");\n              _generateQuotationPage_commonMethod.default.clickOnViewQuote();\n              cy.wait(5000);\n              cy.xpath(quotesDetailspage.quotesPagetitleNummber).invoke('text').as('QuotesId_FCL');\n              cy.get('@QuotesId_FCL').then(quoteId => {\n                cy.get('@inquiryId_FCL').then(inquiryId => {\n                  _quotesPage_commonMethod.default.verifyQuotesIdText(quoteId);\n                  _quotesPage_commonMethod.default.verifyInquiryIdText(inquiryId);\n                  _quotesPage_commonMethod.default.verifyOriginPort(rows[i].L3_origin);\n                  _quotesPage_commonMethod.default.verifyDestinationPort(rows[i].L3_destination);\n                  _quotesPage_commonMethod.default.verifyMode(\"SEA_FCL\");\n                  cy.xpath(\"//div[text()[normalize-space()='\" + inquiryId + \"']]\").click({\n                    force: true\n                  });\n                  _quotesPage_commonMethod.default.verifyOriginPort(rows[i].L3_origin);\n                  _quotesPage_commonMethod.default.verifyDestinationPort(rows[i].L3_destination);\n                  _quotesPage_commonMethod.default.verifyMode(\"SEA_FCL\");\n                });\n              });\n            });\n          });\n        }\n      });\n    });\n  });\n});",
            "uuid": "7f60a141-2694-4b63-87f6-61fd83738ece",
            "parentUUID": "37d10d99-13a5-4ca4-bb0a-2a5f7760ebd3",
            "isHook": false,
            "skipped": false
          }
        ]
      },
      {
        "file": "cypress/integration/report/report.spec.js",
        "tests": [
          {
            "title": "should perform task A",
            "fullTitle": "Report should perform task A",
            "timedOut": null,
            "duration": 0,
            "state": "pending",
            "speed": null,
            "pass": false,
            "fail": false,
            "pending": true,
            "context": null,
            "code": "",
            "uuid": "d9c42094-82ea-4eb5-ace8-fad467b62d44",
            "parentUUID": "26c54e28-dfcd-4e6e-94c3-fb685bef51bc",
            "isHook": false,
            "skipped": false
          }
        ]
      }
    ],
    "__v": 0
  },
  {
    "_id": "64520e857055db8a21d2f81a",
    "testName": "regressionReport-May3",
    "suites": 2,
    "tests": 6,
    "passes": 5,
    "pending": 1,
    "failures": 0,
    "testsRegistered": 6,
    "passPercent": 83.33333333333333,
    "pendingPercent": 16.666666666666668,
    "other": 0,
    "hasOther": 0,
    "skipped": 0,
    "results": [
      {
        "file": "cypress/integration/web/regression/regression.spec.js",
        "tests": [
          {
            "title": "TC1033 - Verify Admin able to create Internal Forwarder User",
            "fullTitle": "Regression TC1033 - Verify Admin able to create Internal Forwarder User",
            "timedOut": null,
            "duration": 66948,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "cy.fixture('elementRepositories/web/users.json').then(usersPage => {\n  var internalUser_firstName = _commonMethod.default.randomStringGenerator(4).toUpperCase();\n  var internalUser_lastName = _commonMethod.default.randomStringGenerator(4).toUpperCase();\n  var internalUser_phoneNumber = _commonMethod.default.randomPhoneNumberGenerator(10);\n  var internalUser_email = _commonMethod.default.randomEmailGenerator(3);\n  var internalUser_password = \"Password@123\";\n  var email = internalUser_email + \"$\";\n  cy.writeFile(\"cypress/fixtures/UsersEmailList.txt\", email, {\n    flag: 'a+'\n  });\n  _commonMethod.default.openApp(url + \"users\");\n  _loginPage_commonMethod.default.enterEmailAndLogin(username, password);\n  cy.wait(2000);\n  _usersPage_commonMethod.default.clickOnCreateNewUser();\n  _usersPage_commonMethod.default.verifyCreateUserFeildsEmpty();\n  _usersPage_commonMethod.default.enterFirstName(internalUser_firstName);\n  _usersPage_commonMethod.default.enterLastName(internalUser_lastName);\n  _usersPage_commonMethod.default.updateCurrency(\"INR\");\n  _usersPage_commonMethod.default.enterPhoneNumber(internalUser_phoneNumber);\n  _usersPage_commonMethod.default.clickOnUserRole();\n  _usersPage_commonMethod.default.enterUserRole(\"USER\");\n  cy.wait(5000);\n  cy.xpath(usersPage.userGlobal).click();\n  _usersPage_commonMethod.default.enterEmail(internalUser_email);\n  _usersPage_commonMethod.default.enterPasswordAndConfirmPAssword(internalUser_password);\n  _usersPage_commonMethod.default.clickOnSubmitButton();\n  cy.wait(3000);\n  _usersPage_commonMethod.default.searchUserUsingEmail(internalUser_email);\n  cy.xpath(\"//span[text()='\" + internalUser_email + \"']\").should('have.text', internalUser_email);\n  cy.log(\"New Forwarder User has been created\");\n  _navigationBar_commonMethods.default.logOut();\n});",
            "uuid": "604c6562-dbbc-4fb3-91d6-52ad47ac7315",
            "parentUUID": "652cc159-c735-4b27-8a05-70160ce08d05",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "TC4336 - Verify forwarder can create shipper admin and shipper users",
            "fullTitle": "Regression TC4336 - Verify forwarder can create shipper admin and shipper users",
            "timedOut": null,
            "duration": 151835,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "cy.fixture('elementRepositories/web/users.json').then(usersPage => {\n  var shipperCompanyName = _commonMethod.default.randomStringGenerator(4).toUpperCase() + \" Pvt. Ltd \";\n  var shipperCompanyEmail = _commonMethod.default.randomEmailGenerator(4);\n  var shipperPhoneNumber = _commonMethod.default.randomPhoneNumberGenerator();\n  var shipperAdmin_firstName = _commonMethod.default.randomStringGenerator(5).toUpperCase();\n  var shipperAdmin_lastName = _commonMethod.default.randomStringGenerator(5).toUpperCase();\n  var shipperAdmin_email = _commonMethod.default.randomEmailGenerator(5);\n  var shipperAdmin_phoneNumber = _commonMethod.default.randomPhoneNumberGenerator(10);\n  var shipperAdmin_password = \"Password@123\";\n  var email = shipperAdmin_email + \"$\";\n  cy.writeFile(\"cypress/fixtures/UsersEmailList.txt\", email, {\n    flag: 'a+'\n  });\n  var shipperUser_firstName = _commonMethod.default.randomStringGenerator(5).toUpperCase();\n  var shipperUser_lastName = _commonMethod.default.randomStringGenerator(5).toUpperCase();\n  var shipperUser_email = _commonMethod.default.randomEmailGenerator(5);\n  var shipperUser_phoneNumber = _commonMethod.default.randomPhoneNumberGenerator(10);\n  var shipperUser_password = \"Password@123\";\n  var email = shipperUser_email + \"$\";\n  cy.writeFile(\"cypress/fixtures/UsersEmailList.txt\", email, {\n    flag: 'a+'\n  });\n  _commonMethod.default.openApp(url + \"shippers\");\n  _loginPage_commonMethod.default.enterEmailAndLogin(username, password);\n  cy.wait(2000);\n  _shippersPage_commonMethod.default.clickOnAddShipper(shipperCompanyName, shipperCompanyEmail, shipperPhoneNumber);\n  _commonMethod.default.openApp(url + \"users\");\n  _usersPage_commonMethod.default.clickOnCreateNewUser();\n  _usersPage_commonMethod.default.changeUserTypeToShipper();\n  _usersPage_commonMethod.default.enterCompanyNameInCreateNewUser(shipperCompanyName);\n  _usersPage_commonMethod.default.enterFirstName(shipperAdmin_firstName);\n  _usersPage_commonMethod.default.enterLastName(shipperAdmin_lastName);\n  _usersPage_commonMethod.default.updateCurrency(\"INR\");\n  _usersPage_commonMethod.default.enterPhoneNumber(shipperAdmin_phoneNumber);\n  _usersPage_commonMethod.default.selectRoleAsShipperAdmin();\n  _usersPage_commonMethod.default.enterEmail(shipperAdmin_email);\n  _usersPage_commonMethod.default.enterPasswordAndConfirmPAssword(shipperAdmin_password);\n  _usersPage_commonMethod.default.clickOnSubmitButton();\n  cy.wait(2000);\n  _usersPage_commonMethod.default.clickOnShipperUsers();\n  _usersPage_commonMethod.default.searchUserUsingEmail(shipperAdmin_email);\n  cy.log(\"A New Shipper Admin has been created using Forwarder\");\n  cy.xpath(usersPage.shipperAdminRoleinEmailSearch).should('have.text', \"SHIPPER ADMIN\");\n  _commonMethod.default.openApp(url + \"users\");\n  _usersPage_commonMethod.default.clickOnCreateNewUser();\n  _usersPage_commonMethod.default.changeUserTypeToShipper();\n  _usersPage_commonMethod.default.enterCompanyNameInCreateNewUser(shipperCompanyName);\n  _usersPage_commonMethod.default.enterFirstName(shipperUser_firstName);\n  _usersPage_commonMethod.default.enterLastName(shipperUser_lastName);\n  _usersPage_commonMethod.default.updateCurrency(\"INR\");\n  _usersPage_commonMethod.default.enterPhoneNumber(shipperUser_phoneNumber);\n  _usersPage_commonMethod.default.clickOnUserRole();\n  _usersPage_commonMethod.default.enterUserRole(\"SHIPPER USER\");\n  cy.wait(3000);\n  cy.xpath(usersPage.shipperUser).click(); // cy.xpath(\"//md-option[@value='b1ad84e0-2225-11e9-803a-0186ee9b6985']//div[1]\").click()\n  _usersPage_commonMethod.default.enterEmail(shipperUser_email);\n  _usersPage_commonMethod.default.enterPasswordAndConfirmPAssword(shipperUser_password);\n  _usersPage_commonMethod.default.clickOnSubmitButton();\n  cy.wait(2000);\n  _usersPage_commonMethod.default.clickOnShipperUsers();\n  _usersPage_commonMethod.default.searchUserUsingEmail(shipperUser_email);\n  cy.log(\"A New Shipper User has been created using Forwarder\");\n  cy.xpath(usersPage.shipperUserRoleinEmailSearch).should('have.text', \"SHIPPER USER\");\n  _navigationBar_commonMethods.default.logOut();\n});",
            "uuid": "17b4805f-6425-43f8-b771-018767983ee2",
            "parentUUID": "652cc159-c735-4b27-8a05-70160ce08d05",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "TC1550 - Check user can update the company profile from configurations",
            "fullTitle": "Regression TC1550 - Check user can update the company profile from configurations",
            "timedOut": null,
            "duration": 25266,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "cy.allure().description(\"This Method Check user can update the company profile from configurations\");\ncy.allure().owner(\"Kalpana S\");\ncy.intercept({\n  method: 'POST',\n  url: `/api/forwarder-update/*`\n}).as(\"companyInfo\");\ncy.allure().step('Open Configurations -> company profile');\n_commonMethod.default.openApp(url + \"company-information\");\n_loginPage_commonMethod.default.enterEmailAndLogin(username, password);\nvar updatedCompanyName = \"QA Automation - \" + _commonMethod.default.randomStringGenerator(1).toUpperCase() + _commonMethod.default.randomStringGenerator(2).toLowerCase();\nvar updatedPhoneNumber = _commonMethod.default.randomPhoneNumberGenerator();\nvar updatedEmailId = _commonMethod.default.randomEmailGenerator();\nvar updatedCompanyWebsite = \"www.freightify\" + _commonMethod.default.randomStringGenerator(3).toLowerCase() + \".com\";\ncy.allure().step(\"Edit and Update the following Company name,Company phone number,zip code,Address,company website\");\n_myCompanyPage_commonMethod.default.editCompanyProfileName(updatedCompanyName);\n_myCompanyPage_commonMethod.default.editCompanyEmailId(updatedEmailId);\n_myCompanyPage_commonMethod.default.editCompanyPhoneNumber(updatedPhoneNumber);\n_myCompanyPage_commonMethod.default.editCompanyWebsite(updatedCompanyWebsite);\n_myCompanyPage_commonMethod.default.clickOnApplyChanges();\ncy.wait(3000);\ncy.wait(\"@companyInfo\").its(\"response.body\").then(companyInfo => {\n  expect(companyInfo.company.company_name).eq(updatedCompanyName);\n  expect(companyInfo.company.company_email).eq(updatedEmailId);\n  expect(companyInfo.company.domain_data.company_website_url).eq(updatedCompanyWebsite);\n  expect(companyInfo.company.company_phone_number).eq(updatedPhoneNumber.toString());\n});\ncy.allure().step(\"Verify the Company Profile after the edit.\");\ncy.log(\"Verify the Company profile Name is displayed correctly\");\ncy.xpath(`//input[@placeholder='Enter Company name']`).should('have.value', updatedCompanyName);\ncy.xpath(`//input[@placeholder='Enter Company Website']`).should('have.value', updatedCompanyWebsite);\ncy.xpath(`//input[@placeholder='Enter Email ID']`).should('have.value', updatedEmailId);\ncy.xpath(`//input[@placeholder='Phone Number']`).should('have.value', updatedPhoneNumber);\ncy.intercept({\n  method: 'POST',\n  url: `/api/forwarder-update/*`\n}).as(\"companyInfo1\");\ncy.log('Edit back the company name as email as previous one ' + companyName + ' ' + companyEmail);\n_myCompanyPage_commonMethod.default.editCompanyProfileName(companyName);\n_myCompanyPage_commonMethod.default.editCompanyEmailId(companyEmail);\n_myCompanyPage_commonMethod.default.clickOnApplyChanges();\ncy.wait(3000);\ncy.xpath(`//input[@placeholder='Enter Company name']`).should('have.value', companyName);\ncy.xpath(`//input[@placeholder='Enter Email ID']`).should('have.value', companyEmail);\ncy.wait(\"@companyInfo1\").its(\"response.body\").then(companyInfo => {\n  expect(companyInfo.company.company_name).eq(companyName);\n  expect(companyInfo.company.company_email).eq(companyEmail);\n  expect(companyInfo.company.domain_data.company_website_url).eq(updatedCompanyWebsite);\n  expect(companyInfo.company.company_phone_number).eq(updatedPhoneNumber.toString());\n});",
            "uuid": "9eb39df1-b96f-4316-94e9-b9c0fcbef9d0",
            "parentUUID": "652cc159-c735-4b27-8a05-70160ce08d05",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Validate empty container pickup location - Full Flow",
            "fullTitle": "Regression Validate empty container pickup location - Full Flow",
            "timedOut": null,
            "duration": 118764,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "cy.allure().description(\"Validate empty container pickup location - combined test scenarios\");\nvar testCaseId = \"Depot-1\";\ncy.task('readXlsx', {\n  file: 'cypress/fixtures/sheet/depot.xlsx',\n  sheet: \"Depot-1\"\n}).then(rows => {\n  for (let i = 0; i < rows.length; i++) {\n    var sDate = _commonMethod.default.getFutureDate(0);\n    var eDate = _commonMethod.default.getFutureDate(rows[i].noOfDaysFromCurrentDate);\n    var startDate = sDate.year + \"-\" + sDate.month + \"-\" + sDate.date;\n    var expiryDate = eDate.year + \"-\" + eDate.month + \"-\" + eDate.date;\n    var l3_legDetails = _datatInsertionCommonMethod.default.get_FCL_L3_Data(pcms_vendor_id, rows[i].L3_sub_vendor_id, rows[i].L3_origin, rows[i].L3_destination, rows[i].L3_via_pol, rows[i].L3_via_pod, rows[i].L3_serviceType, rows[i].L3_cargoType, rows[i].L3_commodity, startDate, expiryDate, rows[i], rows[i].isAgentRequired, rows[i].agentId, rows[i].L3_Type);\n    _helper.default.dataCreation(l3_legDetails).then(data => {\n      var Batchcode = data.body[0].batchcode + \"$\";\n      var bCode = \"L3=\" + data.body[0].batchcode + \"$\";\n      cy.log(Batchcode);\n      cy.writeFile(\"cypress/fixtures/updatedBatchcode.txt\", Batchcode, {\n        flag: 'a+'\n      });\n      cy.writeFile(`cypress/fixtures/test/${testCaseId}_currentBatchCodeList.txt`, bCode, {\n        flag: 'a+'\n      });\n    });\n    var l2_legDetails = _datatInsertionCommonMethod.default.get_FCL_L2_Data(pcms_vendor_id, rows[i].L2_sub_vendor_id, rows[i].L2_origin, rows[i].L2_destination, rows[i].L2_via_pol, rows[i].L2_via_pod, rows[i].L2_serviceType, rows[i].L2_cargoType, rows[i].L2_commodity, startDate, expiryDate, rows[i], rows[i].L2_loadType);\n    _helper.default.dataCreation(l2_legDetails).then(data => {\n      var Batchcode = data.body[0].batchcode + \"$\";\n      var bCode = \"L2=\" + data.body[0].batchcode + \"$\";\n      cy.log(Batchcode);\n      cy.writeFile(\"cypress/fixtures/updatedBatchcode.txt\", Batchcode, {\n        flag: 'a+'\n      });\n      cy.writeFile(`cypress/fixtures/test/${testCaseId}_currentBatchCodeList.txt`, bCode, {\n        flag: 'a+'\n      });\n    });\n    var l4_legDetails = _datatInsertionCommonMethod.default.get_FCL_L4_Data(pcms_vendor_id, rows[i].L4_sub_vendor_id, rows[i].L4_origin, rows[i].L4_destination, rows[i].L4_via_pol, rows[i].L4_via_pod, rows[i].L4_serviceType, rows[i].L4_cargoType, rows[i].L4_commodity, startDate, expiryDate, rows[i], rows[i].L4_loadType);\n    _helper.default.dataCreation(l4_legDetails).then(data => {\n      var Batchcode = data.body[0].batchcode + \"$\";\n      var bCode = \"L4=\" + data.body[0].batchcode + \"$\";\n      cy.log(Batchcode);\n      cy.writeFile(\"cypress/fixtures/updatedBatchcode.txt\", Batchcode, {\n        flag: 'a+'\n      });\n      cy.writeFile(`cypress/fixtures/test/${testCaseId}_currentBatchCodeList.txt`, bCode, {\n        flag: 'a+'\n      });\n    });\n    if (rows[i].isOriginDoorRequired == true) {\n      var l1_legDetails = _datatInsertionCommonMethod.default.get_FCL_L1_Data(pcms_vendor_id, rows[i].L3_sub_vendor_id, rows[i].L3_origin, rows[i].originPort, rows[i].originCountryCode, rows[i].L3_serviceType, rows[i].L3_cargoType, rows[i].L3_commodity, startDate, expiryDate, rows[i], false, \"\", rows[i].L3_Type, null, rows[i].empty_container_pickup, \"\", rows[i].origin_pincode); // cy.writeFile(\"cypress/fixtures/l1.json\", l1_legDetails)\n\n      cy.log(rows[i].origin_pincode);\n      cy.log(l1_legDetails);\n      _helper.default.dataCreation(l1_legDetails).then(data => {\n        var Batchcode = data.body[0].batchcode + \"$\";\n        var bCode = \"L1=\" + data.body[0].batchcode + \"$\";\n        cy.log(Batchcode);\n        cy.writeFile(\"cypress/fixtures/updatedBatchcode.txt\", Batchcode, {\n          flag: 'a+'\n        });\n        cy.writeFile(`cypress/fixtures/test/${testCaseId}_currentBatchCodeList.txt`, bCode, {\n          flag: 'a+'\n        });\n      });\n    }\n    if (rows[i].isDestinationDoorRequired == true) {\n      var l5_legDetails = _datatInsertionCommonMethod.default.get_FCL_L5_Data(pcms_vendor_id, rows[i].L3_sub_vendor_id, rows[i].L3_destination, rows[i].destinationPort, rows[i].destinationCountryCode, rows[i].L3_serviceType, rows[i].L3_cargoType, rows[i].L3_commodity, startDate, expiryDate, rows[i], false, \"\", rows[i].L3_Type, null, rows[i].empty_container_drop, \"\", rows[i].destination_pincode);\n      cy.log(rows[i].destination_pincode);\n      cy.log(l5_legDetails);\n      _helper.default.dataCreation(l5_legDetails).then(data => {\n        var Batchcode = data.body[0].batchcode + \"$\";\n        var bCode = \"L5=\" + data.body[0].batchcode + \"$\";\n        cy.log(Batchcode);\n        cy.writeFile(\"cypress/fixtures/updatedBatchcode.txt\", Batchcode, {\n          flag: 'a+'\n        });\n        cy.writeFile(`cypress/fixtures/test/${testCaseId}_currentBatchCodeList.txt`, bCode, {\n          flag: 'a+'\n        });\n      });\n    }\n    cy.intercept('POST', '/oauth/token').as('login');\n    cy.intercept({\n      method: 'GET',\n      url: `/api/get-rates?*`,\n      query: {\n        type: \"msr_rates\",\n        nearby_only: \"false\",\n        mode: \"SEA-FCL\",\n        leg_type: \"l3_fcl,l1_fcl,l2_fcl,l4_fcl,l5_fcl\"\n      }\n    }).as('msrRates');\n    cy.allure().step('Open the app and login');\n    _commonMethod.default.openApp(pcms_url);\n    _loginPage_commonMethod.default.enterEmailAndLogin(username, password);\n    cy.wait(3000);\n    cy.allure().step(\"Select FCL mode & Enter the following fields 1. Origin 2. Destination 3. Set cargoready date 4. Select the load details - 20GP,40GP 5. Select the local charge -> All Locals & Custom charges 6. Select the sales & shipper company\");\n    _instantRatePage_commonMethod.default.enterOrigin_destination_port(\"CHG12\", \"EGA12\");\n    _instantRatePage_commonMethod.default.selectCustomChargesForSearch(false, false);\n    _commonMethod.default.clickOnDoneButton();\n    _instantRatePage_commonMethod.default.selectCutOFDate(0);\n    _instantRatePage_commonMethod.default.clickSearchInstantRates();\n    cy.wait(4000);\n    cy.wait('@login').its('response.body').then(loginJson => {\n      var BearerToken = `${loginJson.token_type} ${loginJson.access_token}`;\n      var userId = loginJson.use_id;\n      _helper2.default.getProfileDetails(uri, BearerToken, pcms_refererDomain, userId).then(function (profileDetails) {\n        cy.writeFile(`cypress/fixtures/${profileJsonPath}`, JSON.stringify(profileDetails));\n      });\n      _helper2.default.getCurrencySettings(uri, BearerToken, pcms_refererDomain).then(function (currencySettingDetails) {\n        cy.writeFile(`cypress/fixtures/${currenySettingsJsonPath}`, JSON.stringify(currencySettingDetails));\n      });\n    });\n    cy.wait(10000);\n    cy.wait('@msrRates').its('response.body').then(msrRatesResponse => {\n      if (msrRatesResponse.data.rates[3].empty_container_pickup.port_code == rows[i].empty_container_pickup) {\n        expect(msrRatesResponse.data.rates[3].empty_container_pickup.port_code).eq(rows[i].empty_container_pickup);\n        expect(msrRatesResponse.data.rates[3].charges[0].charge_cost, \"Verify the Pickup Charge : \").eq(rows[i].pickup_charge);\n        expect(msrRatesResponse.data.rates[3].charges[0].charge_code).eq(\"pickup_charge\");\n        expect(msrRatesResponse.data.rates[3].charges[1].charge_cost, \"Verify the Carrier Haulage Discount : \").eq(rows[i].carrier_haulage_discount);\n        expect(msrRatesResponse.data.rates[3].charges[1].charge_code).eq(\"carrier_haulage_discount\");\n      } else {\n        expect(msrRatesResponse.data.rates[3].empty_container_drop.port_code).eq(rows[i].empty_container_drop);\n        expect(msrRatesResponse.data.rates[3].charges[0].charge_cost, \"Verify the Delivery fee : \").eq(rows[i].delivery_fee);\n        expect(msrRatesResponse.data.rates[3].charges[0].charge_code).eq(\"delivery_fee\");\n      }\n      if (msrRatesResponse.data.rates[4].empty_container_drop.port_code == rows[i].empty_container_drop) {\n        expect(msrRatesResponse.data.rates[4].empty_container_drop.port_code).eq(rows[i].empty_container_drop);\n        expect(msrRatesResponse.data.rates[4].charges[0].charge_cost, \"Verify the Delivery fee : \").eq(rows[i].delivery_fee);\n        expect(msrRatesResponse.data.rates[4].charges[0].charge_code).eq(\"delivery_fee\");\n      } else {\n        expect(msrRatesResponse.data.rates[4].empty_container_pickup.port_code).eq(rows[i].empty_container_pickup);\n        expect(msrRatesResponse.data.rates[4].charges[0].charge_cost, \"Verify the Pickup Charge : \").eq(rows[i].pickup_charge);\n        expect(msrRatesResponse.data.rates[4].charges[0].charge_code).eq(\"pickup_charge\");\n        expect(msrRatesResponse.data.rates[4].charges[1].charge_cost).eq(rows[i].carrier_haulage_discount);\n        expect(msrRatesResponse.data.rates[4].charges[1].charge_code, \"Verify the Carrier Haulage Discount : \").eq(\"carrier_haulage_discount\");\n      }\n      cy.xpath(\"//span[text()[normalize-space()='View Details']]\").click({\n        force: true\n      });\n      cy.wait(5000);\n    });\n    _instantRatePage_commonMethod.default.clickOnCreateQuote();\n    _instantRatePage_commonMethod.default.clickOnProvideQuoteDetails();\n    _generateQuotationPage_commonMethod.default.generateQuatotationWithEmail(pcms_shipper_username);\n    cy.wait(10000);\n    _generateQuotationPage_commonMethod.default.clickOnViewQuote();\n    cy.wait(5000);\n    cy.xpath(\"(//div[@class='li-div']//div)[1]\").should('contain', rows[i].empty_container_pickup);\n    cy.xpath(\"//button[text()[normalize-space()='Book Now']]\").click({\n      force: true\n    });\n    cy.wait(5000);\n    cy.xpath(\"//button[text()[normalize-space()='Request Booking']]\").click({\n      force: true\n    });\n    cy.wait(5000);\n    cy.xpath(\"//u[text()='View Shipment here']\").click({\n      force: true\n    });\n    cy.wait(5000);\n    cy.log(\"Cannot read the depot in the shipment details page\");\n    cy.xpath(\"(//span[text()='Shipments'])[2]\").click({\n      force: true\n    });\n    cy.wait(3000);\n    cy.xpath(\"(//div[@class='li-div']//div)[1]\").should('contain', rows[i].empty_container_pickup);\n    cy.xpath(\"(//span[text()='Quotes'])[2]\").click({\n      force: true\n    });\n    cy.wait(3000);\n    cy.log('Cannot read the depot in the quote list page');\n  }\n});",
            "uuid": "2bc51adb-c821-4ac3-8f10-261c6de71928",
            "parentUUID": "652cc159-c735-4b27-8a05-70160ce08d05",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "MyRates",
            "fullTitle": "Regression MyRates",
            "timedOut": null,
            "duration": 138324,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": null,
            "code": "cy.fixture('elementRepositories/web/upload.json').then(upload => {\n  cy.fixture('elementRepositories/web/quotesDetail.json').then(quotesDetailspage => {\n    cy.fixture('elementRepositories/web/instantRates_page.json').then(instantratesPage => {\n      cy.allure().description('To verify that all publised rates are visible on search, inquiry and quotes page');\n      cy.task('readXlsx', {\n        file: 'cypress/fixtures/sheet/myrates.xlsx',\n        sheet: \"TC3095\"\n      }).then(rows => {\n        for (let i = 0; i < rows.length; i++) {\n          cy.intercept({\n            method: 'GET',\n            url: `/api/get-rates?*`,\n            query: {\n              type: \"msr_rates\",\n              nearby_only: \"false\",\n              mode: \"SEA-FCL\",\n              leg_type: \"l3_fcl,l2_fcl,l4_fcl\"\n            }\n          }).as('msrRates');\n          cy.intercept({\n            method: 'POST',\n            url: `/api/v2/myrates/list`\n          }).as('list');\n          var sDate = _commonMethod.default.getFutureDate(0);\n          cy.allure().owner(\"Kalpana S\");\n          cy.allure().step('Open the app and login');\n          _commonMethod.default.openApp(url + \"add-rates\");\n          cy.allure().step(\"Update with valid info - Username & password & Submit\");\n          _loginPage_commonMethod.default.enterEmailAndLogin(username, password);\n          cy.wait(2000);\n          cy.xpath(upload.addRatesIframe).then($iframe => {\n            const $body = $iframe.contents().find('body');\n            cy.wait(5000);\n            _addRatesPage_commonMethod.default.selectOriginPort($body, rows[0].L3_origin);\n            _addRatesPage_commonMethod.default.selectDestinationPort($body, rows[0].L3_destination);\n            _addRatesPage_commonMethod.default.selectLoadType($body, \"20GP\");\n            _addRatesPage_commonMethod.default.selectLiner($body, \"All Liners\");\n            _addRatesPage_commonMethod.default.clickOnOtherDetails($body);\n            _addRatesPage_commonMethod.default.addCharge($body, rows, rows[0].isOriginRequired, rows[0].isDestinationRequired);\n            _addRatesPage_commonMethod.default.selectDate($body, sDate.date);\n            _addRatesPage_commonMethod.default.clickOnPublishandProceed($body);\n          });\n          cy.wait(5000);\n          cy.wait('@list').its('response.body.data').then(listResponse => {\n            var Bcode = listResponse.data[0].batchcode;\n            cy.xpath(instantratesPage.selectInstantRatesfromMenuBar).click({\n              force: true\n            });\n            cy.wait(5000);\n            _instantRatePage_commonMethod.default.enterOrigin_destination_port(rows[0].L3_origin, rows[0].L3_destination);\n            _instantRatePage_commonMethod.default.selectCutOFDate(0);\n            _instantRatePage_commonMethod.default.selectLoadTypeFCL(rows[0].L3_Type, rows[0].quantity, rows[0].weight);\n            _instantRatePage_commonMethod.default.selectCustomChargesForSearch(rows[0].isOriginCustomChargeRequired, rows[0].isDestinationCustomChargeRequired);\n            _commonMethod.default.clickOnDoneButton();\n            _instantRatePage_commonMethod.default.selectCustomerDetailsForwarder(shipperUser_username);\n            _instantRatePage_commonMethod.default.clickSearchInstantRates();\n            cy.wait(5000);\n            cy.wait('@msrRates').its('response.body').then(msrRatesResponse => {\n              var bcode = msrRatesResponse.data.rates[0].batchcode[0];\n              expect(bcode).eq(Bcode);\n              cy.log(\"Check the Origin Port\");\n              cy.xpath(instantratesPage.validateOriginPort).should('have.text', '\\n' + rows[0].L3_origin);\n              cy.log(\"Check the Destination\");\n              cy.xpath(instantratesPage.validateDestinationPort).should('have.text', '\\n' + rows[0].L3_destination);\n              cy.wait(3000);\n              cy.xpath(instantratesPage.clickOnViewDetailsButton).click({\n                force: true\n              });\n              cy.wait(2000);\n              _instantRatePage_commonMethod.default.clickOnCreateQuote();\n              cy.wait(2000);\n              _instantRatePage_commonMethod.default.clickOnProvideQuoteDetails();\n              _generateQuotationPage_commonMethod.default.generateQuatotation();\n              cy.wait(5000);\n              cy.log(\"get the inquiry ID\");\n              cy.get('.inquiry-id').invoke('text').as('inquiryId_FCL');\n              cy.log(\"Click on View Quotes\");\n              _generateQuotationPage_commonMethod.default.clickOnViewQuote();\n              cy.wait(5000);\n              cy.xpath(quotesDetailspage.quotesPagetitleNummber).invoke('text').as('QuotesId_FCL');\n              cy.get('@QuotesId_FCL').then(quoteId => {\n                cy.get('@inquiryId_FCL').then(inquiryId => {\n                  _quotesPage_commonMethod.default.verifyQuotesIdText(quoteId);\n                  _quotesPage_commonMethod.default.verifyInquiryIdText(inquiryId);\n                  _quotesPage_commonMethod.default.verifyOriginPort(rows[i].L3_origin);\n                  _quotesPage_commonMethod.default.verifyDestinationPort(rows[i].L3_destination);\n                  _quotesPage_commonMethod.default.verifyMode(\"SEA_FCL\");\n                  cy.xpath(\"//div[text()[normalize-space()='\" + inquiryId + \"']]\").click({\n                    force: true\n                  });\n                  _quotesPage_commonMethod.default.verifyOriginPort(rows[i].L3_origin);\n                  _quotesPage_commonMethod.default.verifyDestinationPort(rows[i].L3_destination);\n                  _quotesPage_commonMethod.default.verifyMode(\"SEA_FCL\");\n                });\n              });\n            });\n          });\n        }\n      });\n    });\n  });\n});",
            "uuid": "fbad7f58-e6d4-4a17-a90c-836f028461b0",
            "parentUUID": "652cc159-c735-4b27-8a05-70160ce08d05",
            "isHook": false,
            "skipped": false
          }
        ]
      },
      {
        "file": "cypress/integration/report/report.spec.js",
        "tests": [
          {
            "title": "should perform task A",
            "fullTitle": "Report should perform task A",
            "timedOut": null,
            "duration": 0,
            "state": "pending",
            "speed": null,
            "pass": false,
            "fail": false,
            "pending": true,
            "context": null,
            "code": "",
            "uuid": "fa66cf85-e753-4e63-8cb4-2079ac6c357f",
            "parentUUID": "0086f43d-4fb7-4324-99df-e72cca4edc97",
            "isHook": false,
            "skipped": false
          }
        ]
      }
    ],
    "__v": 0
  }
]